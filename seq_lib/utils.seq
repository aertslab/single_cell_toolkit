import gzip


def read_line_from_uncompressed_or_gzipped_file(filename: str) -> Generator[str]:
    """
    Yield line from uncompressed or gzip compressed file.
    """

    if filename.endswith(".gz"):
        with gzip.open(filename, "r") as fh:
            for line in fh:
                yield line
    else:
        with open(filename, "r") as fh:
            for line in fh:
                yield line


def is_index2_reverse_complemented(sequencing_machine_id: str) -> bool:
    """
    Check if based on sequencing machine ID if index 2 read is reverse complemented or
    not, if sequencing was done with Dual-Indexed Workflow on a Paired-End Flow Cell.

    Dual-index sequencing on a paired-end flow cell follows one of two workflows,
    depending on the system and software:
      - The forward strand workflow is performed on the NovaSeq 6000 with v1.0 reagent
        kits, MiniSeq with Rapid Reagent kits, MiSeq, HiSeq 2500, and HiSeq 2000.
      - The reverse complement workflow is performed on the iSeq 100, MiniSeq with
        Standard reagent kits, NextSeq Systems, NovaSeq 6000 with v1.5 reagent kits,
        HiSeq X, HiSeq 4000, and HiSeq 3000.


    https://support-docs.illumina.com/SHARE/IndexedSeq/indexed-sequencing.pdf
    """
    sequencing_machine_id_length = len(sequencing_machine_id)

    if sequencing_machine_id_length == 6:
        if sequencing_machine_id[0] in {"M", "C", "D"}:
            # MiSeq, HiSeq1500 or HiSeq2500.
            return False
        elif sequencing_machine_id[0] in {"J", "K", "E", "A"}:
            #  HiSeq3000, HiSeq4000, HiSeqX or NovaSeq6000 (v1.5 reagent kit).
            return True
    elif sequencing_machine_id_length == 7:
        if sequencing_machine_id[0:2] in {"VH"}:
            # NextSeq2000.
            return True
    elif sequencing_machine_id_length == 8:
        if sequencing_machine_id[0:2] in {"NB", "NS", "MN"}:
            # NextSeq500, NextSeq500, MiniSeq (Standard reagent kit).
            return True
    elif sequencing_machine_id_length == 9:
        if sequencing_machine_id[0:5] in {"HWI-M", "HWI-C", "HWI-D"}:
            # MiSeq, HiSeq1500 or HiSeq2500.
            return False

    raise ValueError(f"Unsupported sequencing machine ID: \"{sequencing_machine_id}\".")
